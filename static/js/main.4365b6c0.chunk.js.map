{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Api/Api.jsx","components/Redux/userReducer.js","components/Users/123.jpg","components/Img/Preloader.gif","components/Users/Paginator.jsx","components/Users/Users.jsx","components/Redux/UsersSelector.js","components/Hoc/authHoc.jsx","components/Users/UserContainer.jsx","components/Dialogs/DialogItems/DialogItems.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Redux/DialogReducer.js","components/Redux/DialogSelector.js","components/Dialogs/DialogItems/DialogsContainer.jsx","components/Profile/MyPost/Post/Post.jsx","components/MyForms/FormsValidate.jsx","components/MyForms/validate.js","components/Profile/MyPost/MyPost.jsx","components/Redux/ProfileReducer.js","components/Redux/PostContainer.js","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/ProfileStatusHook.jsx","components/Profile/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Redux/ProfileSelector.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Redux/AuthReducer.jsx","components/Redux/HeaderSelector.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","App.js","components/Redux/redux-store.js","index.js"],"names":["Navbar","className","to","activeClassName","instance","axios","baseURL","headers","withCredentials","Api","page","size","get","id","post","delete","status","put","email","password","rememberMe","captcha","photo","formData","FormData","append","init","Users","pageSize","totalUsers","currentPage","isFetching","setUsersAC","users","type","setTotalPageAC","pages","toggleFatchingAc","userReducer","state","action","map","u","userId","followed","Paginator","props","pagesTotal","Math","ceil","i","push","useState","indexPage","setIndex","leftIndex","rightIndex","src","preloader","alt","filter","p","onClick","e","onChange","photos","small","foto","then","res","data","resultCode","unfollowAC","followAC","name","this","React","Component","Users2","userPage","PageSize","TotalUsers","ISFetching","GetUsers","getUsers","ISAuth","auth","isAuth","mapToState","authHocPro","authPrepare","connect","AuthComplete","serPageAC","items","dispatch","a","totalCount","DialogItems","Message","message","FormDialogRedax","reduxForm","form","onSubmit","handleSubmit","Field","component","Dialogs","dialogs","messagesPage","dialogData","d","messages","messagesData","m","values","addMessageAC","TextArea","messagePost","dialogReducer","MessagesPage","MessagePost","Auth","DialogsContainer","Post","Textarea","input","meta","errorform","error","touched","Input","recuiared","value","lenght","max","length","lenght10","FormPostRedux","placeholder","validate","MyPost","profilePage","PostData","onaddPost","Text","setPhotoAc","newText","userProfile","profileReducer","profile","ProfilePage","NewText","MyPostContainer","addPostAC","ProfileStatusHook","editMode","seteditMode","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","currentTarget","updateStatus","ProfileInfo","large","Number","authId","match","params","setPhoto","target","files","fullName","aboutMe","Profile","UserProfile","TProfile","fProfile","Status","UpdateStatus","AuthId","SetPhoto","updateprofile","getStatusApi","prevProps","prevState","withLink","withRouter","dispath","Header","login","logout","captchaUrl","setLogin","getCaptchaUrl","url","AuthReducer","Login","HeaderContainer","LoginResux","LoginPost","stopSubmit","_error","App","path","render","reducer","combineReducers","authReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddle","renderTree","ReactDOM","document","getElementById","subscribe"],"mappings":"qUAYeA,G,cATA,WACX,OAAQ,sBAAKC,UAAU,OAAf,UACR,8BAAK,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiB,aAAxC,uBACL,8BAAK,cAAC,IAAD,CAASD,GAAG,WAAWC,gBAAiB,aAAxC,wBACL,8BAAK,cAAC,IAAD,CAASD,GAAG,SAASC,gBAAiB,aAAtC,qBACL,4C,wECNAC,E,OAAWC,OAAa,CAC5BC,QAAQ,gDACRC,QAAS,CAAC,UAAW,wCACrBC,iBAAiB,IAIJC,EAAM,WACgB,IAArBC,EAAoB,uDAAd,EAAGC,EAAW,uDAAJ,GACtB,OAAOP,EAASQ,IAAT,qBAA2BF,EAA3B,kBAAyCC,KAF3CF,EAAM,SAIEI,GACb,OAAOT,EAASU,KAAT,iBAAwBD,KAL1BJ,EAAM,SAOII,GACf,OAAOT,EAASW,OAAT,iBAA0BF,KAR5BJ,EAAM,SAUNI,GACL,OAAOT,EAASQ,IAAT,kBAAwBC,KAX1BJ,EAAM,WAcX,OAAOL,EAASQ,IAAT,YAdFH,EAAM,SAmBLI,GACN,OAAOT,EAASQ,IAAT,yBAA+BC,KApBjCJ,EAAM,SAsBHO,GACR,OAAOZ,EAASa,IAAT,iBAA+B,CAACD,YAvBlCP,EAAM,SAyBRS,EAAOC,GACb,IADuBC,EACxB,wDAD2CC,EAC3C,uDADmD,GAE/C,OAAOjB,EAASU,KAAT,aAA4B,CAACI,QAAOC,WAAUC,aAAYC,aA3B5DZ,EAAM,WA8BX,OAAOL,EAASW,OAAT,eA9BFN,EAAM,SAgCJa,GACP,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBlB,EAASa,IAAT,gBAA6BM,EAAU,CAC1ChB,QAAS,CACL,eAAgB,0BArCnBE,EAAM,WA0CX,OAAOL,EAASQ,IAAT,6BClDXc,EAAO,CACPC,MAAM,GACNC,SAAU,GACVC,WAAY,GACZC,YAAa,EACbC,YAAY,GAoCLC,EAAa,SAACC,GACrB,MAAM,CAACC,KAAM,WAAYD,UAElBE,EAAiB,SAACC,GACzB,MAAO,CAACF,KAAM,aAAcE,UAKrBC,EAAmB,SAACN,GAC3B,MAAM,CAACG,KAAK,WAAYH,eAWbO,EAtDI,WAA0B,IAAzBC,EAAwB,uDAAhBb,EAAMc,EAAU,uCAK1C,MAAoB,WAAhBA,EAAON,KACD,2BAAOK,GAAP,IAAcZ,MAAOY,EAAMZ,MAAMc,KAAI,SAAAC,GAAM,OAAIA,EAAE7B,KAAO2B,EAAOG,OAAe,2BAAID,GAAX,IAAcE,UAAU,IAAaF,OAE9F,aAAhBF,EAAON,KACL,2BAAOK,GAAP,IAAcZ,MAAOY,EAAMZ,MAAMc,KAAI,SAAAC,GAAM,OAAIA,EAAE7B,KAAO2B,EAAOG,OAAe,2BAAID,GAAX,IAAcE,UAAU,IAAcF,OAG/F,aAAhBF,EAAON,KACL,2BAAOK,GAAP,IAAcZ,MAAOa,EAAOP,QAEd,eAAhBO,EAAON,KACL,2BAAOK,GAAP,IAAcV,WAAYW,EAAOJ,QAEnB,eAAhBI,EAAON,KACT,2BAAOK,GAAP,IAAcT,YAAaU,EAAO9B,OAEhB,aAAhB8B,EAAON,KACL,2BAAOK,GAAP,IAAcR,WAAYS,EAAOT,aAGtCQ,GClCQ,G,OAAA,IAA0B,iCCA1B,MAA0B,sC,QCsD1BM,EAjDA,SAACC,GAKZ,IAHA,IAAIC,EAAaC,KAAKC,KAAKH,EAAMjB,WAAWiB,EAAMlB,UAC9CQ,EAAQ,GAEHc,EAAE,EAAGA,GAAKH,EAAYG,IAC7Bd,EAAMe,KAAKD,GANS,MASKE,mBAAS,GATd,mBASlBC,EATkB,KASPC,EATO,KAUnBC,EAA2B,IAAdF,EAAW,GAAM,EAC9BG,EAAuB,GAAVH,EAClB,OAAO,8BACN,sBAAKpD,UAAU,QAAf,UACC6C,EAAMf,WAAa,qBAAK9B,UAAU,YAAYwD,IAAQC,EAAWC,IAAI,cAAiB,KACvF,sBAAK1D,UAAU,aAAf,cAA8BmC,EAAMwB,QAAO,SAAAC,GAAC,OAAIA,GAAIN,GAAaM,GAAKL,KAAYf,KAAK,SAAAoB,GAAM,OAAO,sBAAK5D,UAAU,qBAAqB6D,QAAW,SAACC,GAAKjB,EAAMkB,SAASH,IAApE,cAA2EA,QAC9KR,EAAW,GAAK,wBAAQS,QAAS,WAAKR,EAASD,EAAU,IAAzC,4CAChBA,GAAa,wBAAQS,QAAS,WAAKR,EAASD,EAAU,IAAzC,qDAGbP,EAAMnB,MAAMc,KAAK,SAAAC,GAAC,OAAG,sBAAMzC,UAAU,gBAAhB,UACf,sBAAKA,UAAU,aAAf,UACA,cAAC,IAAD,CAASC,GAAI,YAAcwC,EAAE7B,GAA7B,SACA,qBAAK4C,IAAsB,MAAjBf,EAAEuB,OAAOC,MAAgBxB,EAAEuB,OAAOC,MAAQC,EAAOlE,UAAU,OAAO0D,IAAI,WAEhF,qBAAK1D,UAAU,eAAf,SACCyC,EAAEE,SACC,wBAAQkB,QAAU,WAAMrD,EAAsBiC,EAAE7B,IACjDuD,MAAK,SAAAC,GAAkC,IAAxBA,EAAIC,KAAKC,YAAkBzB,EAAM0B,WAAW9B,EAAE7B,QAD5D,sBAEF,wBAAQiD,QAAU,WAAMrD,EAAoBiC,EAAE7B,IAC7CuD,MAAK,SAAAC,GAAkC,IAAxBA,EAAIC,KAAKC,YAAkBzB,EAAM2B,SAAS/B,EAAE7B,QAD5D,yBAIF,sBAAKZ,UAAU,eAAf,UACA,sBAAKA,UAAU,oBAAf,UACA,8BAAMyC,EAAEgC,OACR,8BAAMhC,EAAE1B,YAER,sBAAKf,UAAU,qBAAf,UACA,wBACA,0CCuBK0B,E,uKAxDX,OAAO,cAAC,EAAD,eAAegD,KAAK7B,Y,GAHX8B,IAAMC,WCPbC,EAAS,SAACvC,GACtB,OAAOA,EAAMwC,SAASpD,OAGVqD,EAAW,SAACzC,GACrB,OAAOA,EAAMwC,SAASnD,UAGbqD,EAAa,SAAC1C,GACvB,OAAOA,EAAMwC,SAASlD,YAGbqD,EAAa,SAAC3C,GACvB,OAAOA,EAAMwC,SAAShD,YAGboD,EAAW,SAAC5C,GACrB,OAAOA,EAAM6C,UAEJC,EAAS,SAAC9C,GACnB,OAAOA,EAAM+C,KAAKC,QCnBlBC,EAAa,SAACjD,GAAD,MAAW,CACxBgD,OAAQhD,EAAM+C,KAAKC,SAEVE,EAAY,SAACZ,GAAe,IAC/Ba,EAD8B,uKAG5B,OAAKf,KAAK7B,MAAMyC,OACT,cAACV,EAAD,eAAeF,KAAK7B,QADI,cAAC,IAAD,CAAU5C,GAAK,eAHlB,GACV0E,IAAMC,WAOpC,OADkBc,YAAQH,EAARG,CAAoBD,IC6BlCE,EAAeH,E,4MA1BbzB,SAAW,SAACtD,GACT,EAAKoC,MAAMT,kBAAkB,GAC5B,EAAKS,MAAM+C,UAAUnF,GACrBD,EAAaC,EAAM,EAAKoC,MAAMlB,UAC9BwC,MAAK,SAAAC,GAAO,EAAKvB,MAAMd,WAAWqC,EAAIC,KAAKwB,OAC3C,EAAKhD,MAAMT,kBAAkB,O,kEAP/BsC,KAAK7B,MAAMsC,a,+BAWX,OAAS,gCAERT,KAAK7B,MAAMf,WAAa,qBAAK9B,UAAU,YAAYwD,IAAQC,EAAWC,IAAI,cAAiB,KAC5F,cAAC,EAAD,CACIhC,MAASgD,KAAK7B,MAAMnB,MACpBC,SAAW+C,KAAK7B,MAAMlB,SACtBC,WAAc8C,KAAK7B,MAAMjB,WACzBC,YAAe6C,KAAK7B,MAAMhB,YAC1BkC,SAAYW,KAAKX,SACjBS,SAAYE,KAAK7B,MAAM2B,SACvBD,WAAcG,KAAK7B,MAAM0B,oB,GAzBRI,IAAMC,YAyCpBc,eARE,SAACpD,GAAD,MAAY,CAC1BZ,MAAOmD,EAAOvC,GACdX,SAAUoD,EAASzC,GACnBV,WAAYoD,EAAW1C,GACvBR,WAAYmD,EAAW3C,GACvB6C,SAAUD,EAAS5C,GACnBgD,OAAQF,EAAO9C,MAEgB,CAACkC,SPfd,SAAC9B,GAClB,MAAM,CAACT,KAAM,SAAUS,WOckB6B,WPZtB,SAAC7B,GACpB,MAAM,CAACT,KAAM,WAAYS,WOW4BX,aAAYG,iBAAgB0D,UPH9D,SAACnF,GACpB,MAAM,CAACwB,KAAK,aAAcxB,SOEkE2B,mBAAkB+C,SPG1F,WAChB,8CAAO,WAAOW,GAAP,eAAAC,EAAA,6DACHD,EAAS1D,GAAkB,IADxB,SAEW5B,IAFX,OAED4D,EAFC,OAGL0B,EAAS1D,GAAkB,IAC3B0D,EAAS/D,EAAWqC,EAAIC,KAAKwB,QAC7BC,EAAS5D,EAAekC,EAAIC,KAAK2B,aAL5B,2CAAP,wDOJON,CAA+GC,G,kBCzC/GM,I,OAPI,SAACpD,GAGhB,OAAQ,qBAAK7C,UAAU,OAAf,SACR,cAAC,IAAD,CAASC,GAAI,YAAY4C,EAAMjC,GAA/B,SAAoCiC,EAAM4B,WCA3ByB,GALL,SAACrD,GACX,OAAQ,qBAAK7C,UAAU,YAAf,SACH6C,EAAMsD,WCyCTC,GAAkBC,YAAU,CAACC,KAAK,cAAhBD,EAVL,SAACxD,GAEpB,OACE,uBAAM0D,SAAU1D,EAAM2D,aAAtB,UACA,8BAAK,cAACC,EAAA,EAAD,CAAOhC,KAAM,WAAYiC,UAAW,eACzC,8BAAK,oGAMQC,GAtCC,SAAC9D,GAEd,IAAI+D,EAAU/D,EAAMgE,aAAaC,WAAWtE,KAAI,SAAAuE,GAAC,OAAI,cAAC,GAAD,CAAatC,KAAMsC,EAAEtC,KAAM7D,GAAImG,EAAEnG,QAClFoG,EAAWnE,EAAMgE,aAAaI,aAAazE,KAAI,SAAA0E,GAAC,OAAI,cAAC,GAAD,CAASf,QAASe,EAAEf,aAM5E,OAAKtD,EAAMyC,OAEV,sBAAKtF,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,SACG4G,IAEH,sBAAK5G,UAAU,WAAf,UACCgH,EACD,8BAGA,cAACZ,GAAD,CAAiBG,SAfH,SAACY,GAClBtE,EAAMuE,aAAaD,EAAOE,qBAGA,cAAC,IAAD,CAAUpH,GAAK,Y,SCbxCwB,GAAO,CAACqF,WAAY,CACpB,CAAClG,GAAG,EAAG6D,KAAM,4BACb,CAAC7D,GAAG,EAAG6D,KAAM,4BACb,CAAC7D,GAAG,EAAG6D,KAAM,wCACb,CAAC7D,GAAG,EAAG6D,KAAM,4BACb,CAAC7D,GAAG,EAAG6D,KAAM,yCAEfwC,aAAe,CACb,CAACd,QAAS,wCACV,CAACA,QAAS,gDACV,CAACA,QAAS,sDACV,CAACA,QAAS,kEAEVmB,YAAa,IAeFC,GAZO,WAA0B,IAAzBjF,EAAwB,uDAAhBb,GAAKc,EAAW,uCAE3C,MAAoB,gBAAhBA,EAAON,KAGH,2BAAOK,GAAP,IACJ2E,aAAa,GAAD,oBAAM3E,EAAM2E,cAAZ,CAA0B,CAACd,QAAS5D,EAAO8E,cAIxD/E,GC9BMkF,GAAe,SAAClF,GACzB,OAAOA,EAAMuE,cAEJY,GAAc,SAACnF,GACxB,OAAOA,EAAMuE,aAAaS,aAEjBI,GAAO,SAACpF,GACjB,OAAOA,EAAM+C,KAAKC,QCuBPqC,GADajC,aARX,SAACpD,GAClB,MAAO,CACJuE,aAAcW,GAAalF,GAC3BgF,YAAaG,GAAYnF,GACzBgD,OAAQoC,GAAKpF,MAIgC,CAAC8E,aF5BvB,SAACC,GACvB,MAAO,CAACpF,KAAK,cAAeoF,cE2BJ3B,CAAoCiB,ICrBjDiB,GANF,SAAC/E,GAEV,OAAQ,8BACHA,EAAMsD,W,SCHD0B,I,OAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASlF,EAAW,iCAE9CmF,EAAYD,EAAKE,OAASF,EAAKG,QAEnC,OACI,gCACA,gEAAcJ,GAAWjF,GAAzB,IAAgC7C,UAAcgI,EAAY,QAAU,MACpE,8BAAMA,GAAY,+EAKZG,GAAQ,SAAC,GAA6B,IAA5BL,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASlF,EAAW,iCAE3CmF,EAAYD,EAAKE,OAASF,EAAKG,QAEnC,OACI,gCACA,6DAAWJ,GAAWjF,GAAtB,IAA6B7C,UAAcgI,EAAY,QAAU,MACjE,8BAAMA,GAAY,8ECpBbI,GAAY,SAAAC,GAEpB,IAAKA,EAAQ,MAAO,SAKZC,GAAS,SAACC,GAAD,OAAS,SAACF,GAE5B,GAAIA,EAAMG,OAASD,EAAK,MAAM,4GAAN,OAA+BA,KCoBrDE,GAAWH,GAAO,IAShBI,GAAgBrC,YAAU,CAACC,KAAM,QAAjBD,EARP,SAACxD,GAChB,OACI,uBAAM0D,SAAU1D,EAAM2D,aAAtB,UACA,8BAAM,cAACC,EAAA,EAAD,CAAOhC,KAAM,OAAQiC,UAAWmB,GAAUc,YAAe,yDAAaC,SAAY,CAACR,GAAWK,QACpG,8BAAK,oGAMII,GAlCA,SAAChG,GAGZ,IAAIhC,EAAOgC,EAAMiG,YAAYC,SAASvG,KAAI,SAAAoB,GAAC,OAAK,cAAC,GAAD,CAAMuC,QAASvC,EAAEuC,aAOrE,OACI,gCAGK,cAACuC,GAAD,CAAenC,SAVN,SAACY,GAEftE,EAAMmG,UAAU7B,EAAO8B,SASlB,8BAAMpI,QCPJqI,GAAa,SAAC7H,GACrB,MAAO,CACHY,KAAM,WAAYZ,UAGtBI,GAAO,CACPsH,SAAS,CAAE,CAACnI,GAAI,EAAGuF,QAAS,yCAC5B,CAACvF,GAAI,EAAGuF,QAAQ,4DAChB,CAACvF,GAAI,EAAGuF,QAAS,oFACjB,CAACvF,GAAI,EAAGuF,QAAQ,yEAChBgD,QAAS,GACTC,YAAa,KACbtH,YAAY,EACZf,OAAQ,IAqDGsI,GAnDQ,WAA0B,IAAzB/G,EAAwB,uDAAhBb,GAAKc,EAAW,uCAE5C,GAAoB,aAAhBA,EAAON,KAAoB,CAC3B,IAAI2B,EAAI,CACJhD,GAAI,EACJuF,QAAS5D,EAAO0G,MAIpB,OAFA,2BAAO3G,GAAP,IAAcyG,SAAS,GAAD,oBAAMzG,EAAMyG,UAAZ,CAAsBnF,IAAIuF,QAAS,KAGrD,MAAoB,YAAhB5G,EAAON,KACL,2BAAOK,GAAP,IAAc8G,YAAa7G,EAAO+G,UAEpB,eAAhB/G,EAAON,KACP,2BAAOK,GAAP,IAAcvB,OAAQwB,EAAOxB,SAEd,aAAhBwB,EAAON,KACJ,2BAAOK,GAAP,IAAc8G,YAAY,2BAAI9G,EAAM8G,aAAX,IAAwBpF,OAAOzB,EAAOlB,UAGpEiB,GClDAiH,GAAc,SAACjH,GACxB,OAAOA,EAAMwG,aAEJU,GAAU,SAAClH,GACpB,OAAOA,EAAMwG,YAAYK,SCoCdM,GAHS/D,aAdP,SAACpD,GAEd,MAAO,CACHwG,YAAaS,GAAYjH,GACzB6G,QAASK,GAAQlH,OAGJ,SAACwD,GAClB,MAAO,CACHkD,UAAW,SAACC,GACRnD,EFhCW,SAACmD,GACpB,MAAO,CAAChH,KAAK,WAAYgH,QE+BRS,CAAUT,QAIPvD,CAAoCmD,ICC7Cc,GApCW,SAAC9G,GAAW,IAAD,EAEHM,oBAAS,GAFN,mBAE5ByG,EAF4B,KAElBC,EAFkB,OAGP1G,mBAASN,EAAM9B,QAHR,mBAG5BA,EAH4B,KAGpB+I,EAHoB,KAIjCC,qBAAW,WACPD,EAAUjH,EAAM9B,UAClB,CAAC8B,EAAM9B,SAYb,OACI,iCAEK6I,GACW,8BACI,qBAAKI,cAhBR,WACbH,GAAa,IAeG,SAAgC9I,GAAU,aAIzD6I,GACW,8BACI,8BAAK,uBAAOvB,MAAStH,EAAQkJ,WAAW,EAAMC,OAnB/C,WACfL,GAAY,IAkBwE9F,SAhBpE,SAACD,GACjBgG,EAAUhG,EAAEqG,cAAc9B,OAC1BxF,EAAMuH,aAAarJ,cCMZsJ,GAnBE,SAACxH,GAOhB,OAEC,gCACA,qBAAKW,IAAOX,EAAMuG,YAAYpF,OAAOsG,MAAO5G,IAAI,6BAChD,8BAAM6G,OAAO1H,EAAM2H,UAAYD,OAAO1H,EAAM4H,MAAMC,OAAOhI,SAAW,uBAAOT,KAAM,OAAQ8B,SATrE,SAACD,GAExBjB,EAAM8H,SAAS7G,EAAE8G,OAAOC,MAAM,SAQ1B,wDAAYhI,EAAMuG,YAAY0B,YAC9B,2EAAgBjI,EAAMuG,YAAY2B,WAClC,uEACA,8BAAK,cAAC,GAAD,2BAAuBlI,GAAvB,IAA8B9B,OAAU8B,EAAM9B,cANxC8B,EAAMuG,YAAY1G,SCGlBsI,GAZC,SAACnI,GAEb,OACI,sBAAK7C,UAAU,UAAf,UAEA,cAAC,GAAD,aAAcoJ,YAAavG,EAAMuG,YAAarI,OAAU8B,EAAM9B,OAAQ4J,SAAU9H,EAAM8H,UAAc9H,IACpG,8BACA,cAAC,GAAD,UCXK6E,GAAO,SAACpF,GACjB,OAAOA,EAAM+C,KAAKC,QAET2F,GAAc,SAAC3I,GACxB,OAAOA,EAAMwG,YAAYM,aAEhB8B,GAAW,SAAC5I,GACrB,OAAOA,EAAM6I,UAEJC,GAAS,SAAC9I,GACnB,OAAOA,EAAMwG,YAAY/H,QAEhBsK,GAAe,SAAC/I,GACzB,OAAOA,EAAM8H,cAEJkB,GAAS,SAAChJ,GACnB,OAAOA,EAAM+C,KAAKzE,IAET2K,GAAW,SAACjJ,GAErB,OAAOA,EAAMqI,UCgCbhF,GAAeH,E,4MAxCnBgG,cAAgB,WACZ,IAAK9I,EAAS,EAAKG,MAAM4H,MAAMC,OAAOhI,OAEnB,IAAXA,IACAA,EAAS,EAAKG,MAAM2H,QAE3B,EAAK3H,MAAMsI,SAASzI,GACpB,EAAKG,MAAM4I,aAAa/I,I,kEAGrBgC,KAAK8G,kB,yCAGUE,EAAWC,GAEvBjH,KAAK7B,MAAM4H,MAAMC,OAAOhI,SAAWgJ,EAAUjB,MAAMC,OAAOhI,QAE/DgC,KAAK8G,kB,+BAaL,OAAK9G,KAAK7B,MAAMuG,YAKV,cAAC,GAAD,2BAAa1E,KAAK7B,OAAlB,IAAyBuG,YAAe1E,KAAK7B,MAAMuG,YAAauB,SAAYjG,KAAK7B,MAAM8H,YAJlF,qBAAKnH,IAAQC,EAAWC,IAAI,kB,GAhCdiB,IAAMC,YAqDjCgH,GAAWC,YAAWlG,IACXD,gBAZE,SAACpD,GAAD,MAAY,CAEzBgD,OAAQoC,GAAKpF,GACb8G,YAAa6B,GAAY3I,GACzB6I,SAAUD,GAAS5I,GACnBvB,OAAQqK,GAAO9I,GACf8H,aAAciB,GAAa/I,GAC3BkI,OAAQc,GAAOhJ,GACfqI,SAAUY,GAASjJ,MAIW,CAAC6I,SPbX,SAACzI,GAEzB,8CAAO,WAAOoD,GAAP,eAAAC,EAAA,sEACavF,EAAYkC,GADzB,OACC0B,EADD,OAEN0B,EAlDU,CACH7D,KAAK,UAAWqH,QAiDElF,EAAIC,OAFvB,2CAAP,uDOW6CoH,aPJjB,SAAC/I,GACzB,8CAAO,WAAOoD,GAAP,eAAAC,EAAA,sEACavF,EAAckC,GAD3B,OACC0B,EADD,OAEC0B,EArDD,CACH7D,KAAM,aAAclB,OAoDKqD,EAAIC,OAF1B,2CAAP,uDOGuD+F,aPE/B,SAACrJ,GACzB,8CAAO,WAAO+E,GAAP,SAAAC,EAAA,sEACYvF,EAAeO,GAD3B,yDAAP,uDOHqE4J,SPOjD,SAACtJ,GACrB,8CAAO,WAAOyK,GAAP,eAAA/F,EAAA,sEACavF,EAAca,GAD3B,OAEyB,KADxB+C,EADD,QAEKC,KAAKC,YACTwH,EAAQ5C,GAAW9E,EAAIC,KAAKA,KAAKL,SAHlC,2CAAP,wDORW0B,CAAsEkG,ICnDtEG,GAZA,SAAClJ,GAEhB,OACI,gCACA,yCACCA,EAAMyC,OAAS,gCAAK,cAAC,IAAD,CAASrF,GAAM,iBAAf,SAAqC4C,EAAMmJ,QAAgB,wBAAQnI,QAAWhB,EAAMoJ,OAAzB,+CAAwD,cAAC,IAAD,CAAShM,GAAK,SAAd,uB,SCLxIwB,GAAM,CACNb,GAAI,KACJK,MAAM,KACN+K,MAAO,KACP1G,QAAQ,EACR4G,WAAY,MA0BLC,GAAU,SAACvL,EAAIK,EAAO+K,EAAO1G,GAAa,MAAO,CAACrD,KAAM,WAAYoC,KAAM,CAACzD,KAAIK,QAAO+K,QAAO1G,YAmC3F8G,GAAgB,WACzB,8CAAO,WAAOtG,GAAP,eAAAC,EAAA,sEACavF,IADb,OACC4D,EADD,OAEC0B,EArC+B,CAAC7D,KAAM,aAAcoC,KAAM,CAAC6H,WAqCvC9H,EAAIC,KAAKgI,OAF9B,2CAAP,uDAMWC,GAhEK,WAA2B,IAA1BhK,EAAyB,uDAAjBb,GAAMc,EAAW,uCAE1C,MAAmB,aAAhBA,EAAON,KAEE,uCACDK,GACAC,EAAO8B,MAFN,IAGJiB,OAAQ/C,EAAO8B,KAAKiB,OACpB1E,GAAI2B,EAAO8B,KAAKzD,KAGE,eAAhB2B,EAAON,KACL,uCACDK,GACAC,EAAO8B,MAFN,IAGJ6H,WAAY3J,EAAO8B,KAAK6H,aAIzB5J,GC9BEiK,GAAQ,SAACjK,GAClB,OAAOA,EAAM+C,KAAK2G,OAETtE,GAAO,SAACpF,GACjB,OAAOA,EAAM+C,KAAKC,QCKhBkH,G,kLAEoB,IAAD,OAEbhM,IACC2D,MAAK,SAAAC,GAGN,GAA4B,IAAxBA,EAAIC,KAAKC,WAAiB,CAAC,IAAD,EAEAF,EAAIC,KAAKA,KAA7BpD,EAFoB,EAEpBA,MAAOL,EAFa,EAEbA,GAAIoL,EAFS,EAETA,MAEjB,EAAKnJ,MAAMsJ,SAAUvL,EAAIK,EAAM+K,GAAO,S,+BAK9C,OAAO,cAAC,GAAD,eAAYtH,KAAK7B,Y,GAjBF8B,IAAMC,WAyBrBc,gBAJE,SAACpD,GAAD,MAAY,CACzB0J,MAAOO,GAAMjK,GACbgD,OAAQoC,GAAKpF,MAEiB,CAAC6J,YAAU/J,mBAAkB6J,OF0BzC,WAClB,8CAAO,WAAOnG,GAAP,SAAAC,EAAA,sEACavF,IADb,OAE6B,IAF7B,OAES6D,KAAKC,YACTwB,EAAUqG,GAAS,KAAM,KAAM,MAAM,IAH1C,2CAAP,wDE3BWzG,CAAyD8G,ICzBlE/D,I,OAAWH,GAAO,KAiBlBmE,GAAapG,YAAU,CAACC,KAAM,SAAjBD,EAhBN,SAACxD,GAGV,OACA,uBAAM0D,SAAU1D,EAAM2D,aAAtB,UACA,8BAAK,cAACC,EAAA,EAAD,CAAOhC,KAAM,QAASkE,YAAa,iCAASjC,UAAWyB,GAAOS,SAAY,CAACR,GAAWK,QAC3F,8BAAK,cAAChC,EAAA,EAAD,CAAOhC,KAAM,WAAYkE,YAAa,uCAAUjC,UAAWyB,GAAOlG,KAAK,WAAW2G,SAAY,CAACR,GAAWK,QAE/G,8BAAK,cAAChC,EAAA,EAAD,CAAOhC,KAAM,aAAciC,UAAW,QAASzE,KAAK,eACzD,8BAAMY,EAAMqJ,YAAc,qBAAK1I,IAAKX,EAAMqJ,WAAaxI,IAAI,cAC1Db,EAAMqJ,YAAc,8BAAK,cAACzF,EAAA,EAAD,CAAOhC,KAAM,UAAWkE,YAAa,UAAYjC,UAAWyB,GAAOlG,KAAK,WAClG,8BAAMY,EAAMoF,OAAS,qBAAKjI,UAAU,WAAf,SAA2B6C,EAAMoF,UACtD,8BAAK,oDA4BMvC,gBAJI,SAACpD,GAAD,MAAY,CAC3BgD,OAAQhD,EAAM+C,KAAKC,OACnB4G,WAAY5J,EAAM+C,KAAK6G,cAES,CAACQ,UHHZ,SAACzL,EAAOC,EAAUC,EAAYC,GAA9B,8CAA2C,WAAO0E,GAAP,iBAAAC,EAAA,sEAE5CvF,EAAUS,EAAOC,EAAUC,EAAWC,GAFM,OAGpC,KADrBgD,EAFyD,QAGxDC,KAAKC,WACTwB,EAAUqG,GAAS/H,EAAIC,KAAKA,KAAK3B,OAAQzB,EAAOA,GAAO,KAE5B,KAAxBmD,EAAIC,KAAKC,YACRwB,EAASsG,MAETjG,EAAU/B,EAAIC,KAAK2C,SAAS,GAChClB,EAAS6G,aAAW,QAAS,CAACC,OAAOzG,MAVuB,2CAA3C,wDGGVT,EAvBG,SAAC7C,GAUf,OAAIA,EAAMyC,OACC,cAAC,IAAD,CAAUrF,GAAK,aAGtB,sBAAKD,UAAU,OAAf,UACA,uCACA,cAACyM,GAAD,CAAYlG,SAfA,SAAClC,GAEbxB,EAAM6J,UAAUrI,EAAKpD,MAAOoD,EAAKnD,SAAUmD,EAAKlD,WAAYkD,EAAKjD,SACjEZ,IAAa2D,MAAK,SAAAC,GACQ,IAAlBA,EAAIC,KAAKA,MACR,QAUuB6H,WAAYrJ,EAAMqJ,mBCT3CW,GAzBH,WAGV,OAEE,sBAAK7M,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACC,cAAC,GAAD,MAED,qBAAKA,UAAU,SAAf,SACA,cAAC,EAAD,MAEA,gCAEA,cAAC,IAAD,CAAO8M,KAAK,WAAWC,OAAQ,kBAAI,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,OAAQ,kBAAI,cAAC,GAAD,OAC3C,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAI,cAAC,EAAD,OACjC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAI,cAAC,GAAD,c,6BCnBnCC,GAAUC,aAAgB,CAC1BnE,YAAaO,GACbxC,aAAcU,GACdzC,SAAUzC,EACVgD,KAAM6H,GACN5G,KAAM6G,OAEHC,GAAmBC,OAAOC,sCAAwCC,KAClEC,GAAQC,aAAYT,GAA+BI,GACtDM,aAAgBC,QAGpBN,OAAOG,MAAQA,GACAA,UCVXI,GAAa,WACfC,IAASd,OACL,cAAC,IAAD,UACA,cAAC,IAAD,CAAUS,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGFM,SAASC,eAAe,UAI9BH,KACAJ,GAAMQ,WAAU,WAEdJ,U","file":"static/js/main.4365b6c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport  './Navbar.css'\r\nconst Navbar = () => {\r\n    return (<nav className='menu'>\r\n    <div><NavLink to=\"/profile\" activeClassName={\"activelink\"}>Profile</NavLink></div>\r\n    <div><NavLink to=\"/dialogs\" activeClassName={\"activelink\"}>Messages</NavLink></div>\r\n    <div><NavLink to=\"/users\" activeClassName={\"activelink\"}>Users</NavLink></div>\r\n    <div>News</div>\r\n    \r\n    </nav>);\r\n}\r\nexport default Navbar","import * as axios from 'axios'\r\n\r\nlet instance = axios.create({\r\nbaseURL:'https://social-network.samuraijs.com/api/1.0/',\r\nheaders: {\"API-KEY\": \"7149364e-f75b-4f64-8304-e150274b89f4\"},\r\nwithCredentials: true\r\n\r\n})\r\n\r\nexport const Api = {\r\n    getUsers (page =1, size = 10) {\r\n        return instance.get(`users?page=${page}&count=${size}`)\r\n    },\r\n    usersFollowPost (id){\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    usersFollowDelete (id){\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    Profile (id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    Header (){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    UsersApi () {\r\n        return instance.get(`users`)\r\n    },\r\n   GetStatus (id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    PostStatus (status){\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    Login (email, password, rememberMe = false,captcha=\"\")\r\n    {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    LogOut () {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    savePhoto (photo){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`,formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    getCaptcha (){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n","import {Api} from './../Api/Api'\r\nlet init = {\r\n    Users:[ ],\r\n    pageSize: 10,\r\n    totalUsers: 10,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\nconst userReducer =(state = init, action) =>{\r\n    \r\nlet newState;\r\n\r\n\r\n  if (action.type === 'FOLLOW')  {\r\n    newState = {...state, Users: state.Users.map(u => {if (u.id === action.userId){return {...u, followed: true}}return u})}\r\n    return newState;\r\n}else if (action.type === 'UNFOLLOW')  {\r\n    newState = {...state, Users: state.Users.map(u => {if (u.id === action.userId){return {...u, followed: false}}return u})}\r\n    \r\n    return newState;\r\n}else if (action.type === 'SETUSERS') {\r\n    newState = {...state, Users: action.users}\r\n    return newState;\r\n}else if (action.type === 'TOTALPAGES') {\r\n    newState = {...state, totalUsers: action.pages}\r\n    return newState\r\n}else if (action.type === 'NUMBERPAGE') {\r\nnewState = {...state, currentPage: action.page};\r\nreturn newState\r\n}else if (action.type === 'FETCHING'){\r\n    newState = {...state, isFetching: action.isFetching}\r\n    return newState\r\n}\r\nreturn state\r\n}\r\nexport let followAC= (userId) => {\r\n    return{type: 'FOLLOW', userId}\r\n}\r\nexport let unfollowAC= (userId) => {\r\n    return{type: 'UNFOLLOW', userId}\r\n}\r\nexport let setUsersAC = (users) => {\r\n    return{type: 'SETUSERS', users}\r\n}\r\nexport let setTotalPageAC = (pages) => {\r\n    return {type: 'TOTALPAGES', pages}\r\n}\r\nexport let serPageAC = (page) =>{\r\n    return{type:'NUMBERPAGE', page}\r\n}\r\nexport let toggleFatchingAc = (isFetching) => {\r\n    return{type:'FETCHING', isFetching}\r\n}\r\nexport const getUsers = () => {\r\n        return async (dispatch) => {\r\n            dispatch(toggleFatchingAc (true));\r\n          let res = await Api.getUsers();\r\n          dispatch(toggleFatchingAc (false));\r\n          dispatch(setUsersAC(res.data.items)); \r\n          dispatch(setTotalPageAC(res.data.totalCount))\r\n        }  \r\n}\r\nexport default userReducer","export default __webpack_public_path__ + \"static/media/123.400b6995.jpg\";","export default __webpack_public_path__ + \"static/media/Preloader.b2a8fa3d.gif\";","import React, {useState} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport preloader from './../Img/Preloader.gif'\r\nimport foto from './123.jpg'\r\nimport { Api } from '../Api/Api'\r\nlet Paginator =(props) => {\r\n\r\n    let pagesTotal = Math.ceil(props.totalUsers/props.pageSize);\r\n    let pages = [];\r\n    //let test = 50\r\n    for (let i=1; i <= pagesTotal; i++){\r\n      pages.push(i);\r\n    }\r\n    \r\n   let [indexPage, setIndex] = useState(1);\r\n   let leftIndex = (indexPage -1)*10+1;\r\n   let rightIndex = indexPage*10;\r\n  return <div>\r\n   <div className='Users'> \r\n   {props.isFetching ? <img className='preloader' src =  {preloader} alt=\"preloader\"/>  : null } \r\n   <div className=\"pagination\"> {pages.filter(p => p >=leftIndex && p <= rightIndex).map( p => {return <div className='pageRomb pageHover' onClick = {(e)=>{props.onChange(p)}}> {p}</div>})}\r\n   {indexPage >1 && <button onClick={()=>{setIndex(indexPage-1)}}>Назад</button>}\r\n   {indexPage && <button onClick={()=>{setIndex(indexPage+1)}}>Вперёд</button>}\r\n   </div>\r\n  {\r\n    props.Users.map( u=> <div  className=\"Users_columns\">   \r\n          <div className=\"Users_foto\">\r\n          <NavLink to={'/profile/' + u.id}>\r\n          <img src={u.photos.small !=null  ? u.photos.small : foto } className=\"foto\" alt='foto' />\r\n          </NavLink>\r\n          <div className=\"Users_button\">\r\n          {u.followed \r\n            ? <button onClick ={() =>{Api.usersFollowDelete(u.id)\r\n            .then(res =>{if(res.data.resultCode === 0){props.unfollowAC(u.id)}})}}>Unfollow</button> : \r\n            <button onClick ={() =>{Api.usersFollowPost(u.id)\r\n            .then(res =>{if(res.data.resultCode === 0){props.followAC(u.id)}})}}>Follow</button>} \r\n          </div>\r\n          </div>\r\n          <div className=\"Users_column\">\r\n          <div className=\"Users_column-left\">\r\n          <div>{u.name}</div>\r\n          <div>{u.status}</div>\r\n          </div>\r\n          <div className=\"Users_column-right\">\r\n          <div>{/*u.location.city*/}</div>\r\n          <div>{/*u.location.country*/}</div>\r\n          </div>\r\n         </div>\r\n         </div>\r\n            )\r\n        }\r\n   </div>\r\n </div>\r\n}\r\nexport default Paginator","import React, {useState} from 'react'\r\nimport './Users.css'\r\n\r\nimport foto from './123.jpg'\r\n//import * as axios from 'axios'\r\nimport preloader from './../Img/Preloader.gif'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Api } from '../Api/Api'\r\nimport Paginator from './Paginator'\r\nclass Users extends React.Component {\r\n  render () {\r\n        \r\n    return <Paginator {...this.props}/>    // props = {this.props}\r\n  }\r\n //render () {\r\n  /*let pagesTotal = Math.ceil(this.props.totalUsers/this.props.pageSize);\r\n  let pages = [];\r\n  //let test = 50\r\n  for (let i=1; i <= pagesTotal; i++){\r\n    pages.push(i);\r\n  }\r\n \r\nreturn <div>\r\n\r\n <div className='Users'> \r\n {this.props.isFetching ? <img className='preloader' src =  {preloader} alt=\"preloader\"/>  : null }\r\n <div className=\"pagination\"> {pages.map( p => {return <div className='pageHover' onClick = {(e)=>{this.props.onChange(p)}}> {p}</div>})}</div>\r\n\r\n\r\n {\r\n    this.props.Users.map( u=> <div  className=\"Users_columns\">\r\n    \r\n        <div className=\"Users_foto\">\r\n   \r\n     \r\n        <NavLink to={'/profile/' + u.id}>\r\n        <img src={u.photos.small !=null  ? u.photos.small : foto } className=\"foto\" alt='foto' />\r\n        </NavLink>\r\n        <div className=\"Users_button\">\r\n        \r\n        {u.followed \r\n          ? <button onClick ={() =>{Api.usersFollowDelete(u.id)\r\n          .then(res =>{if(res.data.resultCode === 0){this.props.unfollowAC(u.id)}})}}>Unfollow</button> : \r\n          <button onClick ={() =>{Api.usersFollowPost(u.id)\r\n          .then(res =>{if(res.data.resultCode === 0){this.props.followAC(u.id)}})}}>Follow</button>} \r\n        </div>\r\n        </div>\r\n        <div className=\"Users_column\">\r\n        <div className=\"Users_column-left\">\r\n        <div>{u.name}</div>\r\n        <div>{u.status}</div>\r\n        </div>\r\n        <div className=\"Users_column-right\">*/\r\n      //  <div>{/*u.location.city*/}</div>\r\n       // <div>{/*u.location.country*/}</div>\r\n       // </div>\r\n      // </div>\r\n     //  </div>\r\n      \r\n      //    )\r\n    //  render () {\r\n        \r\n      //  return <Paginator {...this.props}/>    // props = {this.props}\r\n     // }\r\n// </div>\r\n // </div>\r\n  //  }\r\n  }\r\nexport default Users","\r\n\r\nexport const Users2 = (state) => {\r\n return state.userPage.Users\r\n}\r\n\r\nexport const PageSize = (state) => {\r\n    return state.userPage.pageSize\r\n}\r\n\r\nexport const TotalUsers = (state) => {\r\n    return state.userPage.totalUsers\r\n}\r\n\r\nexport const ISFetching = (state) => {\r\n    return state.userPage.isFetching\r\n}\r\n\r\nexport const GetUsers = (state) => {\r\n    return state.getUsers\r\n}\r\nexport const ISAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nlet mapToState = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const authHocPro =(Component) => {\r\n    class authPrepare extends React.Component {\r\n        render (){\r\n            if (!this.props.isAuth) return <Redirect to = '/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\nlet connectAuth = connect(mapToState)(authPrepare)\r\nreturn connectAuth\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {followAC, unfollowAC, setUsersAC, setTotalPageAC, serPageAC, toggleFatchingAc,getUsers} from './../Redux/userReducer'\r\nimport Users from  './Users'\r\n//import * as axios from 'axios'\r\nimport preloader from './../Img/Preloader.gif'\r\nimport {Api} from './../Api/Api'\r\n//import { Redirect } from 'react-router-dom'\r\nimport {Users2, PageSize, TotalUsers, ISFetching, GetUsers,ISAuth } from './../Redux/UsersSelector'\r\nimport {authHocPro} from './../Hoc/authHoc'\r\nclass UsersContainer extends React.Component {\r\n    \r\n    componentDidMount () {\r\n       \r\n        this.props.getUsers(); \r\n    }\r\n      onChange = (page) =>{\r\n         this.props.toggleFatchingAc (true);\r\n          this.props.serPageAC(page);//currenPage\r\n          Api.getUsers(page, this.props.pageSize)\r\n         .then(res =>{this.props.setUsersAC(res.data.items  );\r\n          this.props.toggleFatchingAc (false)})\r\n      }\r\n      render() {  \r\n       // if (!this.props.isAuth) return <Redirect to = '/login' />\r\n        return   <div>\r\n        \r\n        {this.props.isFetching ? <img className='preloader' src =  {preloader} alt=\"preloader\"/>  : null }\r\n        <Users  \r\n            Users = {this.props.Users}\r\n            pageSize= {this.props.pageSize}\r\n            totalUsers = {this.props.totalUsers}\r\n            currentPage = {this.props.currentPage} \r\n            onChange = {this.onChange}\r\n            followAC = {this.props.followAC}\r\n            unfollowAC = {this.props.unfollowAC}\r\n             />\r\n         </div> \r\n      }\r\n}\r\n\r\n\r\nlet AuthComplete = authHocPro(UsersContainer)\r\nlet mapToState = (state) => ({\r\n   Users: Users2(state),\r\n   pageSize: PageSize(state),\r\n   totalUsers: TotalUsers(state),\r\n   isFetching: ISFetching(state),\r\n   getUsers: GetUsers(state),\r\n   isAuth: ISAuth(state)\r\n})\r\nexport default connect(mapToState,{followAC, unfollowAC, setUsersAC, setTotalPageAC, serPageAC, toggleFatchingAc, getUsers} )(AuthComplete)//export default connect(mapToState,dispatchToState)(UsersContainer)","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst DialogItems =(props) => {\r\n    //console.log(props)\r\n    \r\n    return (<div className=\"item\">\r\n    <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\nexport default DialogItems","import React from 'react'\r\n\r\nlet Message = (props) => {\r\n    return (<div className='.messages'>\r\n        {props.message}\r\n        </div>)\r\n    }\r\n    export default Message","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport './Dialogs.css'\r\nimport DialogItems from './DialogItems/DialogItems'\r\nimport Message from './Messages/Messages'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n//import {updateMessageAC,addMessageAC} from './../Redux/DialogReducer'\r\nconst Dialogs = (props) => {\r\n\r\n   let dialogs = props.messagesPage.dialogData.map(d => <DialogItems name={d.name} id={d.id}/>)\r\n   let messages = props.messagesPage.messagesData.map(m => <Message message={m.message}/>)\r\n \r\n   let addMessage = (values)=> {\r\n   props.addMessageAC(values.TextArea);\r\n   }\r\n   //console.log(props)\r\n   if (!props.isAuth) return <Redirect to = '/login' />\r\nreturn (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialog-items\">\r\n        {dialogs}\r\n        </div>\r\n      <div className=\"messages\">\r\n      {messages}\r\n      <div>\r\n     {/*<textarea onChange={updateMessage} value ={props.messagePost}></textarea>\r\n      <button onClick = {addMessage}>Добавить сообщение</button> */} \r\n      <FormDialogRedax onSubmit={addMessage}/>\r\n\r\n      </div>\r\n      </div>\r\n     \r\n     </div>)\r\n}\r\nconst DialogForm = (props ) => {\r\n  \r\nreturn (\r\n  <form onSubmit={props.handleSubmit}>\r\n  <div><Field name={\"TextArea\"} component={'textarea'} /></div>\r\n  <div><button>Отправить</button></div>\r\n  </form>\r\n)\r\n\r\n}\r\nconst FormDialogRedax = reduxForm({form:'DialogForm'})(DialogForm)\r\nexport default Dialogs","\r\nexport let addMessageAC = (TextArea)=> {\r\n    return {type:'ADD-MESSAGE', TextArea}\r\n}\r\nlet init = {dialogData: [\r\n    {id:1, name: 'Петя'},\r\n    {id:2, name: 'Вася'},\r\n    {id:3, name: 'Андрей'},\r\n    {id:4, name: 'Иван'},\r\n    {id:5, name: 'Сергей'}\r\n  ],\r\n  messagesData : [\r\n    {message: 'Привет'},\r\n    {message: 'Как дела?'},\r\n    {message: 'Чем занят?'},\r\n    {message: 'Доброго дня'},\r\n    ],\r\n    messagePost: \"\"\r\n}\r\n//let newState;\r\nconst dialogReducer = (state = init,action) => {\r\n    let newState;\r\n    if (action.type === 'ADD-MESSAGE') {\r\n      /*state.messagesData.push({message: state.messagePost})\r\n    state.messagePost=\"\";*/\r\n    newState = {...state, \r\n        messagesData: [...state.messagesData, {message: action.TextArea}]}\r\n\r\n    return newState;\r\n    }\r\nreturn state\r\n}\r\nexport default dialogReducer\r\n","export const MessagesPage = (state) => {\r\n    return state.messagesPage\r\n}\r\nexport const MessagePost = (state) => {\r\n    return state.messagesPage.messagePost\r\n}\r\nexport const Auth = (state) => {\r\n    return state.auth.isAuth\r\n}","//import React from 'react'\r\nimport Dialogs from './../Dialogs'\r\nimport {addMessageAC} from './../../Redux/DialogReducer'\r\nimport { connect } from 'react-redux'\r\nimport  {MessagesPage, MessagePost,Auth } from './../../Redux/DialogSelector'\r\n/*const DialogsContainer = () => {\r\n \r\n  let state = props.store.getState();\r\n   \r\n   let onupdateMessage =(text) => {\r\n   \r\n      props.store.dispatch(updateMessageAC(text));\r\n   }\r\n   let onaddMessage = ()=> {\r\n   \r\nprops.store.dispatch(addMessageAC())\r\n   }\r\nreturn (\r\n    <Dialogs onupdateMessage= {onupdateMessage} onaddMessage={onaddMessage} state={state.messagesPage}/>\r\n)\r\n}*/\r\nlet mapToState = (state)=>{\r\nreturn {\r\n   messagesPage: MessagesPage(state),\r\n   messagePost: MessagePost(state),\r\n   isAuth: Auth(state)\r\n}\r\n}\r\n\r\n   const DialogsContainer = connect(mapToState, {addMessageAC})(Dialogs)//connect(mapToState, dispathToDialogs)(Dialogs)\r\nexport default DialogsContainer","import React from 'react'\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (<div>\r\n        {props.message}\r\n      </div>)\r\n}\r\nexport default Post","import React from 'react'\r\nimport './../Profile/MyPost/MyPostFormCss.css'\r\nexport  const Textarea = ({input, meta, ...props}) => {\r\n  \r\n  const errorform = meta.error && meta.touched\r\n  \r\n    return (\r\n        <div  >\r\n        <textarea {...input} {...props} className = {(errorform ? \"Error\" : \"\")}/>\r\n        <div>{errorform &&<span>Ошибка</span>}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport  const Input = ({input, meta, ...props}) => {\r\n\r\n  const errorform = meta.error && meta.touched\r\n  \r\n    return (\r\n        <div  >\r\n        <input {...input} {...props} className = {(errorform ? \"Error\" : \"\")}/>\r\n        <div>{errorform &&<span>Ошибка</span>}</div>\r\n        </div>\r\n        \r\n    )\r\n}","//import React from 'react'\r\nexport const recuiared = value => {\r\n     // return console.log('recuiared')\r\n     if (!value)  return \"Error\" ;\r\n     return undefined\r\n}\r\n  \r\n\r\nexport const lenght = (max) => (value) => {\r\n  \r\n    if (value.length > max) return  `Длина строки больше ${max}` ;\r\n   return  undefined\r\n}\r\n//export const lenght =max => value => value && value.lenght ? \"Error2\": undefined\r\n ","import React from 'react'\r\nimport Post from './Post/Post'\r\n//import PostDialog from './PostForm'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Textarea} from './../../MyForms/FormsValidate'\r\nimport {recuiared, lenght} from './../../MyForms/validate'\r\nimport './MyPostFormCss.css'\r\nconst MyPost = (props) => {\r\n \r\n   //let refUrl= React.createRef();\r\n    let post = props.profilePage.PostData.map(p =>  <Post message={p.message} />)\r\n    let addPost = (values) => {\r\n      \r\n    props.onaddPost(values.Text);\r\n       \r\n    }\r\n  \r\nreturn (\r\n    <div>\r\n         {/*<textarea ref={refUrl} onChange = {updateText} value={props.newText}></textarea>\r\n         <button onClick = {addPost}>Добавить</button> */}\r\n         <FormPostRedux onSubmit={addPost}/>\r\n         <div>{post}</div>\r\n    </div>\r\n   \r\n\r\n)\r\n\r\n}\r\n \r\nconst lenght10 = lenght(15)\r\nconst FormPost = (props)=> {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n      <div ><Field name={'Text'} component={Textarea} placeholder = {\"Сообщение\"} validate = {[recuiared, lenght10] }/></div>\r\n      <div><button>Отправить</button></div>\r\n      </form>\r\n  )\r\n  }\r\n  const FormPostRedux = reduxForm({form: 'post'})(FormPost)\r\n\r\nexport default MyPost","import {Api} from './../Api/Api'\r\nexport let addPostAC = (Text) => {\r\n    return {type:'ADD-POST', Text}\r\n}\r\n\r\nexport let updateProfileAC = (profile) => {\r\n    return {\r\n        type:'PROFILE', profile\r\n    }\r\n}\r\nexport let getStatusAC = (status) => {\r\n    return {\r\n        type: 'GET-STATUS', status\r\n    }\r\n}\r\nexport let setPhotoAc = (photo) =>{\r\n    return {\r\n        type: 'SETPHOTO', photo\r\n    }\r\n}\r\nlet init = {\r\n    PostData:[ {id: 1, message: \"Привет!\"},\r\n    {id: 1, message:\"Как житуха?\"},\r\n    {id: 1, message: \"Я готовил пирог\"},\r\n    {id: 1, message:\"Я сделал торт\"}],\r\n    newText: \"\",\r\n    userProfile: null,\r\n    isFetching: false,\r\n    status: ''\r\n }\r\nconst profileReducer = (state = init,action) => {\r\n    let newState;\r\n    if (action.type === 'ADD-POST'){\r\n        let p = {\r\n            id: 5,\r\n            message: action.Text\r\n        }\r\nnewState = {...state, PostData: [...state.PostData, p], newText: \"\"}//state.PostData.push(p); state.newText = ''; \r\n          \r\n        return newState \r\n      }else if (action.type === 'PROFILE') {\r\n          newState = {...state, userProfile: action.profile }\r\n          return newState\r\n      }else if (action.type === 'GET-STATUS'){\r\n        newState = {...state, status: action.status}\r\n        return newState\r\n      }else if(action.type === 'SETPHOTO'){\r\n          newState = {...state, userProfile:{...state.userProfile, photos:action.photo}}\r\n          return newState\r\n      }\r\n      return state\r\n}\r\nexport const fProfile = (userId) =>{\r\n   // let userId = `123000`;\r\nreturn async (dispatch) => {\r\n    let res = await Api.Profile(userId)\r\n dispatch(updateProfileAC(res.data))\r\n}\r\n\r\n}\r\n\r\nexport const getStatusApi = (userId) => {\r\n    return async (dispatch) => {\r\n        let res = await Api.GetStatus(userId);\r\n            dispatch(getStatusAC(res.data));  \r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n       let res = await Api.PostStatus(status)\r\n    }\r\n}\r\nexport const setPhoto = (photo) => {\r\n    return async (dispath) =>{\r\n        let res = await Api.savePhoto(photo);\r\n        if (res.data.resultCode === 0){\r\n            dispath(setPhotoAc(res.data.data.photos))\r\n        }\r\n        \r\n    }\r\n}\r\nexport default profileReducer","export const ProfilePage = (state) => {\r\n    return state.profilePage\r\n}\r\nexport const NewText = (state) => {\r\n    return state.profilePage.newText\r\n}","//import React from 'react'\r\nimport MyPost from './MyPost'\r\nimport {addPostAC } from './../../Redux/ProfileReducer'\r\nimport { connect } from 'react-redux'\r\nimport {ProfilePage, NewText} from './../../Redux/PostContainer'\r\n/*const MyPostContainer = (props) => {\r\n   \r\n    let state = props.store.getState();\r\n   \r\n    let onaddPost = () => {\r\n    \r\n        props.store.dispatch(addPostAC())\r\n    }\r\n    let onupdateText = (text) => {\r\n       props.store.dispatch(updateTextAC(text))\r\n    }\r\nreturn (\r\n    <MyPost onaddPost={onaddPost} onupdateText={onupdateText} state = {state.profilePage} />\r\n\r\n)\r\n\r\n}*/\r\n\r\nlet mapToState = (state)=> {\r\n  \r\n    return {\r\n        profilePage: ProfilePage(state),\r\n        newText: NewText(state) \r\n    } \r\n}\r\nlet dispatchToPost = (dispatch)=> {\r\n    return {\r\n        onaddPost: (Text)=> {\r\n            dispatch(addPostAC(Text))\r\n        }\r\n    }\r\n}\r\nconst MyPostContainer = connect(mapToState, dispatchToPost)(MyPost);\r\n\r\n\r\nexport default MyPostContainer","import { useState, useEffect } from \"react\"\r\nimport React from 'react'\r\nconst ProfileStatusHook = (props) => {\r\n    \r\n    let [editMode, seteditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect (()=> {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    const isActive = () => {\r\n        seteditMode (true)\r\n    }\r\n    const isInactive = () => {\r\n        seteditMode(false)\r\n    }\r\n    const inputChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        props.updateStatus(status)\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n            {\r\n        !editMode &&\r\n                    <div>\r\n                        <div onDoubleClick={isActive} >{status || '------'}</div>\r\n                    </div>\r\n            \r\n        }\r\n       { editMode && \r\n                    <div>\r\n                        <div><input value = {status} autoFocus={true} onBlur = {isInactive} onChange = {inputChange}></input></div>\r\n                    </div>\r\n       }\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default ProfileStatusHook","import React from 'react'\r\n\r\n//import ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusHook from './ProfileStatusHook'\r\nlet ProfileInfo =(props) => {  \r\n    \r\n  const PhotoSelected =(e) => {\r\n\r\nprops.setPhoto(e.target.files[0])\r\n  }\r\n \r\n  return (\r\n   \r\n   <div key = {props.userProfile.userId}>\r\n   <img src = {props.userProfile.photos.large} alt='Фото'/> \r\n   <div>{Number(props.authId) === Number(props.match.params.userId) && <input type={\"file\"} onChange={PhotoSelected}></input>}</div>\r\n    <div>Имя:  {props.userProfile.fullName}</div>\r\n    <div>Обо мне:  {props.userProfile.aboutMe}</div>\r\n    <div>Статус</div> \r\n    <div><ProfileStatusHook {...props} status = {props.status} /></div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPostContainer from './MyPost/MyPostContainer'\r\nimport ProfileInfo from './ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className='content'>\r\n        \r\n        <ProfileInfo  userProfile={props.userProfile} status = {props.status} setPhoto={props.setPhoto} {...props}/>\r\n        <div>\r\n        <MyPostContainer />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Profile","export const Auth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const UserProfile = (state) => {\r\n    return state.profilePage.userProfile\r\n}\r\nexport const TProfile = (state) => {\r\n    return state.fProfile\r\n}\r\nexport const Status = (state) => {\r\n    return state.profilePage.status\r\n}\r\nexport const UpdateStatus = (state) => {\r\n    return state.updateStatus\r\n}\r\nexport const AuthId = (state) => {\r\n    return state.auth.id\r\n}\r\nexport const SetPhoto = (state) => {\r\n  \r\n    return state.setPhoto\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport preloader from './../Img/Preloader.gif'\r\n//import * as axios from 'axios'\r\nimport Profile from './Profile'\r\n//import { toggleFatchingAc} from './../Redux/userReducer'\r\nimport {fProfile, getStatusApi,updateStatus, setPhoto } from './../Redux/ProfileReducer'\r\nimport {  withRouter } from 'react-router-dom'\r\nimport { Auth, UserProfile, TProfile, Status,  UpdateStatus, AuthId, SetPhoto } from '../Redux/ProfileSelector'\r\nimport {authHocPro} from './../Hoc/authHoc'\r\n//import { Api } from './../Api/Api'\r\nclass ProfileContainer extends React.Component {\r\nupdateprofile = ()=>{\r\n    let  userId = this.props.match.params.userId\r\n   \r\n        if (userId === 0){\r\n            userId = this.props.authId\r\n        }\r\n     this.props.fProfile(userId);\r\n     this.props.getStatusApi(userId)\r\n}\r\n    componentDidMount () {\r\n        this.updateprofile();\r\n    \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n       if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n      //  let  userId = this.props.match.params.userId\r\n      this.updateprofile();\r\n       // if (userId === 0){\r\n        //    userId = this.props.authId\r\n       // }\r\n     //this.props.fProfile(userId);\r\n     //this.props.getStatusApi(userId)\r\n       }\r\n    \r\n    }\r\n\r\n   \r\n    render () {\r\n       \r\n      if (!this.props.userProfile){ \r\n          return <img src =  {preloader} alt=\"preloader\"/>\r\n      }else{\r\n        \r\n        return (   \r\n            <Profile {...this.props} userProfile = {this.props.userProfile} setPhoto = {this.props.setPhoto}/>\r\n        )}\r\n    }\r\n}\r\n\r\nlet AuthComplete = authHocPro(ProfileContainer)\r\nlet mapToProps = (state) => ({\r\n   \r\n    isAuth: Auth(state),\r\n    userProfile: UserProfile(state),\r\n    fProfile: TProfile(state),\r\n    status: Status(state),\r\n    updateStatus: UpdateStatus(state),\r\n    authId: AuthId(state),\r\n    setPhoto: SetPhoto(state)\r\n});\r\n\r\nlet withLink = withRouter(AuthComplete)\r\nexport default connect(mapToProps,{fProfile, getStatusApi, updateStatus, setPhoto} )(withLink)//updateProfileAC}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Header = (props) => {\r\n  \r\nreturn (\r\n    <div>\r\n    <div>HEADER</div>\r\n    {props.isAuth ? <div><NavLink to  ={\"/profile/\" + 13147}>{props.login}</NavLink><button onClick = {props.logout}>Выход</button></div> : <NavLink to = \"/login\">Login</NavLink>}\r\n    </div>\r\n)\r\n    \r\n\r\n\r\n}\r\nexport default Header;\r\n\r\n","import { stopSubmit } from 'redux-form';\r\nimport {Api} from './../Api/Api'\r\nlet init ={\r\n    id: null,\r\n    email:null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\n\r\nconst AuthReducer = (state = init, action) => {\r\n    let newState;\r\n    if(action.type === 'SETLOGIN'){\r\n        \r\n        newState = {\r\n            ...state, \r\n            ...action.data, \r\n            isAuth: action.data.isAuth,\r\n            id: action.data.id\r\n        }\r\n        return newState;\r\n    }else if (action.type === 'SETCAPTCHA'){\r\n        newState = {\r\n            ...state,\r\n            ...action.data,\r\n            captchaUrl: action.data.captchaUrl\r\n        }\r\n        return newState\r\n    }\r\n    return state\r\n\r\n}\r\nexport let setLogin =(id, email, login, isAuth) => { return {type: 'SETLOGIN', data: {id, email, login, isAuth}}}\r\nconst setCaptcha = (captchaUrl) => {return {type: 'SETCAPTCHA', data: {captchaUrl}}}\r\n//export const setLog = () => (dispatch) => {\r\n  //  Api.Header()\r\n  //  .then(res =>{\r\n  //  this.props.toggleFatchingAc (false);\r\n   \r\n  //  if (res.data.resultCode === 0){\r\n  //      let  {email, id, login} = res.data.data  \r\n  //      this.props.setLogin(email, id, login, true) \r\n   // }\r\n   \r\n  //  }\r\n//}\r\nexport const LoginPost = (email, password, rememberMe, captcha)  => async (dispatch) => {\r\n   // dispatch(stopSubmit(\"login\", {_error:\"Какая-то ошибка\"}))\r\n       let res =  await Api.Login(email, password, rememberMe,captcha)\r\n    if (res.data.resultCode === 0){\r\n        dispatch (setLogin(res.data.data.userId, email, email, true))\r\n    }else {\r\n        if(res.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = res.data.messages[0]\r\n        dispatch(stopSubmit(\"login\", {_error:message}))\r\n    } \r\n}\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let res = await Api.LogOut()\r\n            if (res.data.resultCode === 0){\r\n                dispatch (setLogin(null, null, null, false))  \r\n            }\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        let res = await Api.getCaptcha()\r\n            dispatch(setCaptcha(res.data.url))\r\n        \r\n    }\r\n}\r\nexport default AuthReducer","export const Login = (state) => {\r\n    return state.auth.login\r\n} \r\nexport const Auth = (state) => {\r\n    return state.auth.isAuth\r\n} ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import preloader from './../Img/Preloader.gif'\r\n//import * as axios from 'axios'\r\nimport Header from './Header'\r\nimport {setLogin, logout} from './../Redux/AuthReducer'\r\nimport { Api } from '../Api/Api'\r\nimport {toggleFatchingAc} from './../Redux/userReducer'\r\nimport {Login, Auth} from './../Redux/HeaderSelector'\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount () {\r\n        // this.props.toggleFatchingAc (true);\r\n            Api.Header()\r\n            .then(res =>{\r\n          //  this.props.toggleFatchingAc (false);\r\n    \r\n            if (res.data.resultCode === 0){\r\n             \r\n                let  {email, id, login} = res.data.data  \r\n     \r\n                this.props.setLogin( id, email,login, true) \r\n            }\r\n            }\r\n      )}\r\n      render () {\r\n        return <Header {...this.props}/>\r\n    \r\n      } \r\n}\r\nlet mapToState = (state) => ({\r\n    login: Login(state), \r\n    isAuth: Auth(state)\r\n})\r\nexport default connect(mapToState,{setLogin, toggleFatchingAc, logout})(HeaderContainer)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {LoginPost} from './../Redux/AuthReducer'\r\nimport {Api} from './../Api/Api'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {recuiared, lenght} from './../MyForms/validate'\r\nimport {Input} from './../MyForms/FormsValidate'\r\nimport './login.css'\r\nconst lenght10 = lenght(20)\r\nconst Login =(props) => {\r\n    \r\n    \r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div><Field name={\"email\"} placeholder={\"Логин\"} component={Input} validate = {[recuiared, lenght10]}/></div>\r\n    <div><Field name={\"password\"} placeholder={\"Пароль\"} component={Input} type=\"password\" validate = {[recuiared, lenght10]}/></div>\r\n   \r\n    <div><Field name={\"rememberme\"} component={'input'} type=\"checkbox\"/></div>\r\n    <div>{props.captchaUrl && <img src={props.captchaUrl}  alt='captcha'/>}</div>\r\n    {props.captchaUrl && <div><Field name={\"captcha\"} placeholder={\"Captcha\"}  component={Input} type=\"text\"/></div>}\r\n    <div>{props.error && <div className=\"AnyError\">{props.error}</div>}</div>\r\n    <div><button>Submit</button></div>\r\n    </form>\r\n    )\r\n}\r\nconst LoginResux = reduxForm({form: 'login'})(Login)\r\nconst LoginForm = (props) => {\r\n    const MySubmit =(data) => {\r\n\r\n        props.LoginPost(data.email, data.password, data.rememberMe, data.captcha );\r\n        Api.Header().then(res=>{\r\n            if (res.data.data === 0) {\r\n                <Redirect to = '/profile' />\r\n            }\r\n        })  \r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to = '/profile' />\r\n    }\r\n    return (\r\n        <div className=\"item\">\r\n        <h1>LOGIN</h1>\r\n        <LoginResux onSubmit={MySubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>)\r\n}\r\nconst mapToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect (mapToProps, {LoginPost})(LoginForm)","import React from 'react'\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport UsersContainer from './components/Users/UserContainer'\nimport DialogsContainer from './components/Dialogs/DialogItems/DialogsContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login'\nconst App = () => {\n  \n  //console.log()\n  return (\n    \n    <div className=\"App\">\n      <div className='header'>\n       <HeaderContainer />\n      </div>\n      <div className='navbar'>\n      <Navbar /> \n      </div>\n      <div>\n    \n      <Route path=\"/dialogs\" render={()=><DialogsContainer />}/> \n      <Route path=\"/profile/:userId\" render={()=><ProfileContainer  />}/> \n      <Route path=\"/users\" render={()=><UsersContainer  />}/> \n      <Route path=\"/login\" render={()=><Login  />}/> \n      </div>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport profileReducer from './ProfileReducer';\r\nimport dialogReducer from './DialogReducer';\r\nimport userReducer from './userReducer'\r\nimport authReducer from './AuthReducer'\r\nimport thunkMiddle from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nlet reducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogReducer,\r\n    userPage: userReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddle)\r\n  ));\r\n//let store = createStore(reducer, applyMiddleware(thunkMiddle));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport { BrowserRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport store from './components/Redux/redux-store';\nimport { Provider } from 'react-redux';\n\n\nlet renderTree = () => {\n  ReactDOM.render(\n      <BrowserRouter>\n      <Provider store={store}>\n        <App />\n        </Provider>\n       </BrowserRouter>,\n      document.getElementById('root')\n    );\n}\n\nrenderTree();\nstore.subscribe(() => {\n  //let state = store.getState();\n  renderTree();\n});\n"],"sourceRoot":""}